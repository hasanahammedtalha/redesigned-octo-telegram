import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, filters, CallbackQueryHandler, ContextTypes
from telegram.error import Forbidden
import firebase_admin
from firebase_admin import credentials, db
import json

# --- ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶¶‡¶ø‡¶® ---
# ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶ü‡ßá‡¶≤‡¶ø‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ ‡¶¨‡¶ü‡ßá‡¶∞ ‡¶ü‡ßã‡¶ï‡ßá‡¶®
TOKEN = "7884768889:AAHyXrH1YDwwPhHP-pZn9R5ukWhFPB4xG2U"
# ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶®‡¶ø‡¶ú‡ßá‡¶∞ ‡¶ü‡ßá‡¶≤‡¶ø‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ Chat ID (‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶Ç ‡¶π‡¶ø‡¶∏‡¶æ‡¶¨‡ßá)
ADMIN_ID = "6893452352"

# Firebase ‡¶∏‡ßá‡¶ü‡¶Ü‡¶™
# serviceAccountKey.json ‡¶´‡¶æ‡¶á‡¶≤‡¶ü‡¶ø‡¶∞ ‡¶∏‡¶†‡¶ø‡¶ï ‡¶™‡¶æ‡¶• ‡¶¶‡¶ø‡¶®
cred_json = {
  "type": "service_account",
  "project_id": "jahanara-ef632",
  "private_key_id": "348c16145c9c97e4f34e11644a6869b4c826720a",
  "private_key": "-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDBSyrV5gQM3FF0\n1tAgf4Mwvx0I7h197jej/pX1s/DxDt3JzlY7Jrr5d0VQfXOQhlcqNddYJx35l3JH\nNyMS8OkL/qQqIfFOwOSz12gcVYReLOK+aVYwG0uezk26UcdublihT/PlnM9e0u4w\nn0ZojXMUq9MGADyVexUgw9uT4rLJbu0CRAStUxyDATkNnkxIlirrqsV2pxjCCHeb\np3sA6IodCkjDUoevQZcop/z+A86iGuGO/tjHA8f4nwrukt5VQj8ESBE0hYgSoaRQ\nUYO4Pj+GOdE7jUnlWb8/fdzj8LoMTHwgCqFdjBIqq7GcxvS/fNMAMXona1P2ZNdt\nppsoylh5AgMBAAECggEALzg3rK1WS/X+iDZ5/ZZo7B2j8CyLU9pACXYGGFHvCFSD\nZetcMXMStiKm8jTTaHkJDiy9ALH9pp2Ss0cK8HOd2upIHGrSUlTZCf4TVuilP4Rj\nl/SPs4zXemIXpu6Xc6jNSgsIIA2gsx+ARKyEPMJhXKllEdA4/KNm0+xE1enJl19u\nNnYzJWXbpQdq1irGp2c3B1GVe2pJx0RUheoYnaUYXRd1RP4uWscX3irs004Xi/dm\nRxU4xTDgTgLdMYt8F5lP5NSqsR1eCgp3Gx1eNc5f+YsLLTQFT0F/Y46x7JFvhn2K\nm8EjvTzw4ixIDW2/doiHfvMNhGqg554GkH2GfIlV6QKBgQD9cNrsz3+43x+avROL\n5F5ih23vWBXU6VPrrffBipAZt3nhcDYkGMlWZ4E1ejb2gdRtJuAd+Ni0jxMsnq6g\nzyL8ZhqrDSp/nVofroljJikAuq2/kckgO4tnurAteq9/A+nVCgZ4amKGdc2xmZdU\nJnRHlSclTWzign5/CZo2t5k9qwKBgQDDPtTfRLB7e6pb7kYLmwijKIVrEPrHrNvi\np4Mq9qdlxsESSFeojabu9iEy7plHYjPvM8bZ2fFLx2OWGDxJf8SCUd0zZ6qc4wbW\nD05DH0wgYigetQELY8nzRsr5pgbt9kyyYt5FkOB4Lk8DiO39dpdNi44lRhWC+U42\npMZGy7K2awKBgGagTmZaV9PatgeIzON25CltwbyLpLuEiDEFTzAWFefz/eyl7aaM\nSussGow3Iw6K4CQa++HnJIlo7lDBKOGBPx+JkP724+CtLRNrL8LwbuYWscjDFfhx\nZC/qzvB7n5kFUqir2JbmLWNZTKPAGCFBORDLewCF67OFOAflMYc6rVjlAoGBAKwk\nW582eruEvyEqpctZt3XTJj7Ny639NClUNAvPSKwtXtD1w4Oy0LnjfEXhpHcRmGSQ\nLASraVm8xIrzd0P+SI32C6dlAUIt0DsvZ3s6vu3WXTUltXQLWWUKx67wuS9ZdynY\njcyb/a04dyXQtrRAuQn/vyYR8ql1kYYQJVkKA9ldAoGBAI68ERuhLwCbDPP3Vwni\nGR1wwslj0jytCyiMWnAASp9cTJ2hf1m13tkqdd3m3r1yS1lswYafUUpcgwPhVmEU\nYLeREhznncc4himUKUA6L88xJ9H+7R0e5EnJWq2z3pjN2HlR6/LyLqhO2Wboa6QC\nAPphW9geMdysJOn6RiS/ZUUt\n-----END PRIVATE KEY-----\n",
  "client_email": "firebase-adminsdk-fbsvc@jahanara-ef632.iam.gserviceaccount.com",
  "client_id": "109393520407792440821",
  "auth_uri": "https://accounts.google.com/o/oauth2/auth",
  "token_uri": "https://oauth2.googleapis.com/token",
  "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
  "client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/firebase-adminsdk-fbsvc%40jahanara-ef632.iam.gserviceaccount.com",
  "universe_domain": "googleapis.com"
}


cred = credentials.Certificate(cred_json)
firebase_admin.initialize_app(cred, {
    # ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ Firebase Realtime Database-‡¶è‡¶∞ URL
    'databaseURL': 'https://jahanara-ef632-default-rtdb.asia-southeast1.firebasedatabase.app/'
})
# ‡¶°‡¶æ‡¶ü‡¶æ‡¶¨‡ßá‡¶∏‡ßá‡¶∞ ‡¶è‡¶ï‡¶ü‡¶ø ‡¶∞‡ßá‡¶´‡¶æ‡¶∞‡ßá‡¶®‡ßç‡¶∏ ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡¶æ
ref = db.reference('/')
# --- ‡¶§‡¶•‡ßç‡¶Ø ‡¶¶‡ßá‡¶ì‡ßü‡¶æ ‡¶∂‡ßá‡¶∑ ---


# ‡¶≤‡¶ó‡¶ø‡¶Ç ‡¶ï‡¶®‡¶´‡¶ø‡¶ó‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO
)
logger = logging.getLogger(__name__)

# /start ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶°‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶´‡¶æ‡¶Ç‡¶∂‡¶® (Firebase ‡¶Ø‡ßÅ‡¶ï‡ßç‡¶§ ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá)
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """/start ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶° ‡¶¶‡¶ø‡¶≤‡ßá ‡¶è‡¶á ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®‡¶ü‡¶ø ‡¶ï‡¶æ‡¶ú ‡¶ï‡¶∞‡¶¨‡ßá ‡¶è‡¶¨‡¶Ç ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞‡¶ï‡¶æ‡¶∞‡ßÄ‡¶ï‡ßá ‡¶°‡¶æ‡¶ü‡¶æ‡¶¨‡ßá‡¶∏‡ßá ‡¶∏‡ßá‡¶≠ ‡¶ï‡¶∞‡¶¨‡ßá"""
    user = update.effective_user
    user_id = user.id
    chat_id = update.effective_chat.id

    # --- Firebase ‡¶è ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞‡¶ï‡¶æ‡¶∞‡ßÄ‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø ‡¶∏‡ßá‡¶≠ ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶Ö‡¶Ç‡¶∂ ---
    try:
        users_ref = ref.child('users')
        users_ref.child(str(user_id)).set(chat_id)
        logger.info(f"User {user.first_name} (ID: {user_id}) added/updated in the database.")
    except Exception as e:
        logger.error(f"Failed to add user to database: {e}")
    # --- Firebase ‡¶Ö‡¶Ç‡¶∂ ‡¶∂‡ßá‡¶∑ ---

    # --- ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶Ü‡¶ó‡ßá‡¶∞ ‡¶ï‡ßã‡¶° ‡¶Ö‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶ø‡¶§ ‡¶∞‡¶æ‡¶ñ‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá ---
    reply_keyboard = [
        ["üõí BUY PROXY", "‚òé NUMBER BOT"],
        ["NEED HELP ‚ùì"]
    ]
    reply_markup = ReplyKeyboardMarkup(reply_keyboard, resize_keyboard=True)

    await update.message.reply_text(
        "üëã ‡¶Ü‡¶∏‡¶∏‡¶æ‡¶≤‡¶æ‡¶Æ‡ßÅ ‡¶Ü‡¶≤‡¶æ‡¶á‡¶ï‡ßÅ‡¶Æ \n‚úÖ Sell4U ‡¶§‡ßá ‡¶Ü‡¶™‡¶®‡¶æ‡¶ï‡ßá ‡¶∏‡ßç‡¶¨‡¶æ‡¶ó‡¶§‡¶Æ \nüü¢ Join Official Channel For Updates \nüëâ @sell4u_market üëà",
        reply_markup=reply_markup
    )

# ‡¶á‡¶®‡¶≤‡¶æ‡¶á‡¶® ‡¶¨‡¶æ‡¶ü‡¶® ‡¶ï‡ßç‡¶≤‡¶ø‡¶ï‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶´‡¶æ‡¶Ç‡¶∂‡¶® (‡¶Ö‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶ø‡¶§)
async def button_callback(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """‡¶á‡¶®‡¶≤‡¶æ‡¶á‡¶® ‡¶¨‡¶æ‡¶ü‡¶®‡ßá‡¶∞ ‡¶ï‡¶≤‡¶¨‡ßç‡¶Ø‡¶æ‡¶ï ‡¶°‡ßá‡¶ü‡¶æ ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡ßá‡¶≤ ‡¶ï‡¶∞‡ßá"""
    query = update.callback_query
    await query.answer()

    if query.data == 'inline_1':
        await query.edit_message_text(text="üëâ PROXY DETAILS \n NAME: USA(BUFALIO)[PRO] \n SPEED: 3MB ‚Üì‚Üë \n ISSUE: ‚ùå NO ISSUE \n ID SUSPEND: ‚õî NO \n LIMIT: 1GB \n USES: 24/7 \n PRICE: 40 BDT/0.38 USD \n\n\n üõí FOR BUY üõí\n PAY 40 BTD ON BKASH/NAGAD\n 01796095176\n GIVE SCREENSHOT OF PAYMENT\n BOT: @sell4ubd_bot\n CHANNEL: @sell4u_market")

# ‡¶∏‡¶æ‡¶ß‡¶æ‡¶∞‡¶£ ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡ßá‡¶≤ ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶® (‡¶Ö‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶ø‡¶§)
async def message_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """‡¶¨‡¶ü‡¶Æ ‡¶¨‡¶æ‡¶ü‡¶® ‡¶•‡ßá‡¶ï‡ßá ‡¶Ü‡¶∏‡¶æ ‡¶ü‡ßá‡¶ï‡ßç‡¶∏‡¶ü ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡ßá‡¶≤ ‡¶ï‡¶∞‡ßá"""
    user_message = update.message.text

    if user_message == "üõí BUY PROXY":
        inline_keyboard = [[InlineKeyboardButton("üõí BUY PROXY", callback_data='inline_1')]]
        await update.message.reply_text("PREMIUM PROXY ‡¶ï‡¶ø‡¶®‡¶§‡ßá ‡¶®‡¶ø‡¶§‡ßá ‡¶¶‡ßá‡¶ì‡ßü‡¶æ ‡¶¨‡¶æ‡¶ü‡¶®‡ßá ‡¶ï‡ßç‡¶≤‡¶ø‡¶ï ‡¶ï‡¶∞‡ßÅ‡¶®", reply_markup=InlineKeyboardMarkup(inline_keyboard))
    elif user_message == "‚òé NUMBER BOT":
        inline_keyboard = [[InlineKeyboardButton("‚òé NUMBER BOT", url="https://t.me/otp_palestine_v1_bot")]]
        await update.message.reply_text("NEW OTP RECIVER BOT", reply_markup=InlineKeyboardMarkup(inline_keyboard))
    elif user_message == "NEED HELP ‚ùì":
        inline_keyboard = [[InlineKeyboardButton("‚ôª JOIN SUPPORT BOT", url="https://t.me/sell4upay_bot")]]
        await update.message.reply_text("JOIN OUR SUPPORT BOT AND TEXT", reply_markup=InlineKeyboardMarkup(inline_keyboard))
    else:
        await update.message.reply_text(f"‚ùå UNKNOWN COMMAND: {user_message}")

# --- ‡¶®‡¶§‡ßÅ‡¶® ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶°‡¶Æ‡¶ø‡¶® ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶° ---

async def broadcast(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """‡¶Ö‡ßç‡¶Ø‡¶æ‡¶°‡¶Æ‡¶ø‡¶®‡ßá‡¶∞ ‡¶ï‡¶æ‡¶õ ‡¶•‡ßá‡¶ï‡ßá ‡¶¨‡ßç‡¶∞‡¶°‡¶ï‡¶æ‡¶∏‡ßç‡¶ü ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶™‡¶æ‡¶†‡¶æ‡ßü"""
    if str(update.message.from_user.id) != ADMIN_ID:
        await update.message.reply_text("‡¶è‡¶á ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶°‡¶ü‡¶ø ‡¶∂‡ßÅ‡¶ß‡ßÅ‡¶Æ‡¶æ‡¶§‡ßç‡¶∞ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶°‡¶Æ‡¶ø‡¶® ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶¨‡ßá‡•§")
        return

    if not context.args:
        await update.message.reply_text("‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞‡ßá‡¶∞ ‡¶®‡¶ø‡ßü‡¶Æ: /broadcast <‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú>")
        return

    message_to_broadcast = ' '.join(context.args)
    users = ref.child('users').get()
    if not users:
        await update.message.reply_text("‡¶°‡¶æ‡¶ü‡¶æ‡¶¨‡ßá‡¶∏‡ßá ‡¶ï‡ßã‡¶®‡ßã ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞‡¶ï‡¶æ‡¶∞‡ßÄ ‡¶®‡ßá‡¶á‡•§")
        return

    success_count, fail_count = 0, 0
    failed_users = []
    for user_id, chat_id in users.items():
        try:
            await context.bot.send_message(chat_id=chat_id, text=message_to_broadcast)
            success_count += 1
        except Forbidden:
            logger.warning(f"User {user_id} has blocked the bot. Removing.")
            fail_count += 1
            failed_users.append(user_id)
        except Exception as e:
            logger.error(f"Failed to send to {chat_id}: {e}")
            fail_count += 1

    for user_id in failed_users:
        ref.child('users').child(user_id).delete()

    report = f"üì¢ ‡¶¨‡ßç‡¶∞‡¶°‡¶ï‡¶æ‡¶∏‡ßç‡¶ü ‡¶∏‡¶Æ‡ßç‡¶™‡¶®‡ßç‡¶®!\n\n‚úÖ ‡¶∏‡¶´‡¶≤: {success_count}\n‚ùå ‡¶¨‡ßç‡¶Ø‡¶∞‡ßç‡¶•: {fail_count} (‡¶Ø‡¶æ‡¶∞‡¶æ ‡¶¨‡¶ü ‡¶¨‡ßç‡¶≤‡¶ï ‡¶ï‡¶∞‡ßá‡¶õ‡ßá ‡¶§‡¶æ‡¶¶‡ßá‡¶∞ ‡¶Æ‡ßÅ‡¶õ‡ßá ‡¶´‡ßá‡¶≤‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá)"
    await update.message.reply_text(report)

async def stats(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """‡¶Æ‡ßã‡¶ü ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞‡¶ï‡¶æ‡¶∞‡ßÄ‡¶∞ ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶¶‡ßá‡¶ñ‡¶æ‡ßü"""
    if str(update.message.from_user.id) != ADMIN_ID:
        await update.message.reply_text("‡¶è‡¶á ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶°‡¶ü‡¶ø ‡¶∂‡ßÅ‡¶ß‡ßÅ‡¶Æ‡¶æ‡¶§‡ßç‡¶∞ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶°‡¶Æ‡¶ø‡¶® ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶¨‡ßá‡•§")
        return

    users = ref.child('users').get()
    total_users = len(users) if users else 0
    await update.message.reply_text(f"üìä ‡¶Æ‡ßã‡¶ü ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞‡¶ï‡¶æ‡¶∞‡ßÄ: {total_users}")

# --- ‡¶Æ‡ßÇ‡¶≤ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶® ---

def main() -> None:
    """‡¶¨‡¶ü‡¶ü‡¶ø ‡¶ö‡¶æ‡¶≤‡ßÅ ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶™‡ßç‡¶∞‡¶ß‡¶æ‡¶® ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®"""
    application = Application.builder().token(TOKEN).build()

    # ‡¶Ü‡¶ó‡ßá‡¶∞ ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡ßá‡¶≤‡¶æ‡¶∞‡¶ó‡ßÅ‡¶≤‡ßã
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CallbackQueryHandler(button_callback))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, message_handler))

    # ‡¶®‡¶§‡ßÅ‡¶® ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶°‡¶Æ‡¶ø‡¶® ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡ßá‡¶≤‡¶æ‡¶∞‡¶ó‡ßÅ‡¶≤‡ßã
    application.add_handler(CommandHandler("broadcast", broadcast))
    application.add_handler(CommandHandler("stats", stats))

    print("üöÄ Bot is running with Firebase integration...")
    application.run_polling()

if __name__ == "__main__":
    main()

